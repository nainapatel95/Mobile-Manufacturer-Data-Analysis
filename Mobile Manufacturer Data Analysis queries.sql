create database mobile

SELECT * FROM DIM_LOCATION
SELECT * FROM DIM_CUSTOMER
SELECT * FROM DIM_DATE
SELECT * FROM DIM_MANUFACTURER
SELECT * FROM DIM_MODEL
SELECT * FROM FACT_TRANSACTIONS

--SQL Advance Case Study

--Q1. List all the states in which we have customers who have bought cellphones from 2005 till today. 
--Q1--BEGIN 
	
	SELECT STATE 
	FROM DIM_LOCATION AS T1
	INNER JOIN FACT_TRANSACTIONS AS T5
	ON T1.IDLOCATION = T5.IDLOCATION
	INNER JOIN DIM_MODEL AS T4
	ON T4.IDMODEL = T5.IDMODEL
	WHERE DATE BETWEEN '01-01-2005' AND GETDATE()

--Q1--END

--Q2.What state in the US is buying the most 'Samsung' cell phones? 
--Q2--BEGIN
	
	SELECT TOP 1 
	STATE , COUNTRY
	FROM DIM_LOCATION AS T1
	INNER JOIN FACT_TRANSACTIONS AS T6
	ON T1.IDLOCATION=T6.IDLOCATION
	INNER JOIN DIM_MODEL AS T5
	ON T6.IDMODEL = T5.IDMODEL
	INNER JOIN DIM_MANUFACTURER AS T4
	ON T4.IDMANUFACTURER = T5.IDMANUFACTURER
	WHERE  MANUFACTURER_NAME LIKE 'SAMSUNG' AND COUNTRY = 'US'
	GROUP BY STATE ,COUNTRY
	ORDER BY SUM(QUANTITY) DESC

--Q2--END

--Q3. Show the number of transactions for each model per zip code per state.
--Q3--BEGIN      
	
	SELECT STATE, ZIPCODE, MODEL_NAME, COUNT(IDCUSTOMER) AS N0_OF_TRANSACTION
	FROM DIM_LOCATION AS T1
	INNER JOIN FACT_TRANSACTIONS AS T5
	ON T1.IDLOCATION = T5.IDLOCATION
	INNER JOIN DIM_MODEL AS T4
	ON T4.IDMODEL = T5.IDMODEL
	GROUP BY MODEL_NAME, ZIPCODE, STATE
	
--Q3--END

--Q4.. Show the cheapest cellphone (Output should contain the price also)
--Q4--BEGIN

	SELECT TOP 1
	MODEL_NAME, UNIT_PRICE
	FROM DIM_MODEL
	ORDER BY UNIT_PRICE 

--Q4--END

--Q5.Find out the average price for each model in the top5 manufacturers in terms of 
--   sales quantity and order by average price. 
--Q5--BEGIN

	SELECT MODEL_NAME, AVG(UNIT_PRICE) AS AVG_PRICE
	FROM DIM_MODEL AS T1
	INNER JOIN DIM_MANUFACTURER AS T2
	ON T2.IDMANUFACTURER = T1.IDMANUFACTURER
	WHERE MANUFACTURER_NAME IN 
		(
			SELECT TOP 5 MANUFACTURER_NAME
			FROM FACT_TRANSACTIONS AS T3
			INNER JOIN DIM_MODEL AS T1
			ON T3.IDMODEL = T1.IDMODEL
			INNER JOIN DIM_MANUFACTURER AS T2
			ON T2.IDMANUFACTURER = T1.IDMANUFACTURER
			GROUP BY MANUFACTURER_NAME
			ORDER BY SUM(QUANTITY)
		)
	GROUP BY MODEL_NAME
	ORDER BY AVG(UNIT_PRICE) DESC

--Q5--END

--Q6.List the names of the customers and the average amount spent in 2009,where the average is higher than 500 
--Q6--BEGIN

	SELECT CUSTOMER_NAME, AVG(TOTALPRICE) AS AVERAGE_SPENT
	FROM DIM_CUSTOMER AS T1
	INNER JOIN FACT_TRANSACTIONS AS T2
	ON T1.IDCUSTOMER = T2.IDCUSTOMER
	INNER JOIN DIM_DATE AS T3
	ON T3.DATE = T2.DATE
	WHERE YEAR(T2.DATE) = 2009
	GROUP BY CUSTOMER_NAME
	HAVING AVG(TOTALPRICE)> 500

--Q6--END

--Q7.List if there is any model that was in the top 5 in terms of quantity,simultaneously in 2008,2009 and 2010	
--Q7--BEGIN  
	SELECT * FROM (
			SELECT TOP 5 Manufacturer_name,MODEL_NAME
			FROM Fact_Transactions AS T1
			LEFT JOIN DIM_Model AS D1 
			ON T1.IDModel = D1.IDModel
			LEFT JOIN DIM_MANUFACTURER AS D2  
			ON D2.IDManufacturer = D1.IDManufacturer
			WHERE DATEPART(Year,date)='2008' 
			GROUP BY Manufacturer_name,MODEL_NAME
			ORDER BY  SUM(Quantity ) DESC  
    INTERSECT
			SELECT  TOP 5 Manufacturer_name,MODEL_NAME
			FROM Fact_Transactions T1
			LEFT JOIN DIM_Model D1 
			ON T1.IDModel = D1.IDModel
			LEFT JOIN DIM_MANUFACTURER D2  
			ON D2.IDManufacturer = D1.IDManufacturer
			Where DATEPART(Year,date)='2009' 
			group by Manufacturer_name, MODEL_NAME			
			Order by  SUM(Quantity) DESC 
    INTERSECT
			SELECT TOP 5 Manufacturer_name,MODEL_NAME
			FROM Fact_Transactions T1
			LEFT JOIN DIM_Model D1 
			ON T1.IDModel = D1.IDModel
			JOIN DIM_MANUFACTURER D2  
			ON D2.IDManufacturer = D1.IDManufacturer
			WHERE DATEPART(Year,date)='2010' 
			GROUP BY Manufacturer_name,MODEL_NAME 
			ORDER BY SUM(Quantity ) DESC
			) as A
	
--Q7--END	

--Q8.Show the manufacturer with the 2nd top sales in the year of 2009 and the manufacturer with the
-- 2nd top sales in the year of 2010.
--Q8--BEGIN

	WITH RANK1 AS 
	(
		SELECT MANUFACTURER_NAME,YEAR(DATE) AS YEAR,
		DENSE_RANK() OVER (PARTITION BY YEAR(DATE) ORDER BY SUM(TOTALPRICE)DESC) AS RANK
		FROM FACT_TRANSACTIONS AS T1
		INNER JOIN DIM_MODEL AS T2
		ON T1.IDMODEL = T2.IDModel
		INNER JOIN DIM_MANUFACTURER AS T3
		ON T3.IDManufacturer = T2.IDManufacturer
		GROUP BY Manufacturer_Name, YEAR(DATE)
	)
	SELECT YEAR, MANUFACTURER_NAME
	FROM RANK1
	WHERE YEAR IN ('2009','2010') AND RANK='2'

--Q8--END

--Q9.Show the manufacturers that sold cellphones in 2010 but did not in 2009.
--Q9--BEGIN
		SELECT MANUFACTURER_NAME 
		FROM DIM_MANUFACTURER AS T1
		INNER JOIN DIM_MODEL AS T2 
		ON T1.IDMANUFACTURER= T2.IDMANUFACTURER
		INNER JOIN FACT_TRANSACTIONS AS T3
		ON T2.IDMODEL= T3.IDMODEL
		WHERE YEAR(DATE) = 2010 
		EXCEPT 
		SELECT MANUFACTURER_NAME 
		FROM DIM_MANUFACTURER AS T1
		INNER JOIN DIM_MODEL AS T2 
		ON T1.IDMANUFACTURER= T2.IDMANUFACTURER
		INNER JOIN FACT_TRANSACTIONS AS T3 
		ON T2.IDMODEL= T3.IDMODEL
		WHERE YEAR(DATE) = 2009
	
--Q9--END

--Q10.Find top 10 customers and their average spend, average quantity by each year.
-- Also find the percentage of change in their spend.
--Q10--BEGIN
	
	WITH TOP10 AS
	(
		SELECT TOP 10 CUSTOMER_NAME 
		FROM FACT_TRANSACTIONS AS T1
		INNER JOIN DIM_CUSTOMER AS T2
		ON T1.IDCUSTOMER = T2.IDCUSTOMER
		GROUP BY CUSTOMER_NAME
		ORDER BY SUM(TOTALPRICE) DESC
	),
	YEAR_WISE_SPEND AS
	(
		SELECT CUSTOMER_NAME,AVG(TOTALPRICE) AS AVG_SPEND,AVG(QUANTITY) AS AVG_QTY,
		SUM(TOTALPRICE) AS TOTAL_PRICE,
		LAG(AVG(TOTALPRICE),1) OVER(PARTITION BY Y.CUSTOMER_NAME ORDER BY Z.YEAR) AS LAG,
		Z.YEAR AS YEAR
		FROM FACT_TRANSACTIONS AS X
		INNER JOIN DIM_CUSTOMER AS Y
		ON X.IDCustomer = Y.IDCustomer
		INNER JOIN DIM_DATE AS Z
		ON X.Date = Z.DATE
		WHERE CUSTOMER_NAME IN (SELECT CUSTOMER_NAME FROM TOP10)
		GROUP BY Customer_Name, Z.YEAR
	)
	SELECT CUSTOMER_NAME , AVG_SPEND , AVG_QTY , YEAR , 
	((AVG_SPEND-LAG) / AVG_SPEND*100) AS PERCENT_CHANGE
	FROM YEAR_WISE_SPEND AS A

--Q10--END
	